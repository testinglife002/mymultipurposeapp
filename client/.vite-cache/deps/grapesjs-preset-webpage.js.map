{
  "version": 3,
  "sources": ["webpack://grapesjs-preset-webpage/webpack/universalModuleDefinition", "webpack://grapesjs-preset-webpage/webpack/bootstrap", "webpack://grapesjs-preset-webpage/webpack/runtime/define%20property%20getters", "webpack://grapesjs-preset-webpage/webpack/runtime/hasOwnProperty%20shorthand", "webpack://grapesjs-preset-webpage/webpack/runtime/make%20namespace%20object", "webpack://grapesjs-preset-webpage/src/consts.ts", "webpack://grapesjs-preset-webpage/src/commands/openImport.ts", "webpack://grapesjs-preset-webpage/src/commands/index.ts", "webpack://grapesjs-preset-webpage/src/index.ts", "webpack://grapesjs-preset-webpage/src/blocks.ts", "webpack://grapesjs-preset-webpage/src/panels.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-preset-webpage\"] = factory();\n\telse\n\t\troot[\"grapesjs-preset-webpage\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "export const cmdImport = 'gjs-open-import-webpage';\nexport const cmdDeviceDesktop = 'set-device-desktop';\nexport const cmdDeviceTablet = 'set-device-tablet';\nexport const cmdDeviceMobile = 'set-device-mobile';\nexport const cmdClear = 'canvas-clear';\n", "import type { Editor } from 'grapesjs';\nimport { RequiredPluginOptions } from '..';\nimport { cmdImport } from './../consts';\n\nexport default (editor: Editor, config: RequiredPluginOptions) => {\n  const pfx = editor.getConfig('stylePrefix');\n  const importLabel = config.modalImportLabel;\n  const importCnt = config.modalImportContent;\n\n  editor.Commands.add(cmdImport, {\n    codeViewer: null as any,\n    container: null as HTMLElement | null,\n\n    run(editor) {\n      const codeContent = typeof importCnt == 'function' ? importCnt(editor) : importCnt;\n      const codeViewer = this.getCodeViewer();\n      editor.Modal.open({\n        title: config.modalImportTitle,\n        content: this.getContainer(),\n      }).onceClose(() => editor.stopCommand(cmdImport));\n      codeViewer.setContent(codeContent ?? '');\n      codeViewer.refresh();\n      setTimeout(()=> codeViewer.focus(), 0);\n    },\n\n    stop() {\n      editor.Modal.close();\n    },\n\n    getContainer() {\n      if (!this.container) {\n        const codeViewer = this.getCodeViewer();\n        const container = document.createElement('div');\n        container.className = `${pfx}import-container`;\n\n        // Import Label\n        if (importLabel) {\n          const labelEl = document.createElement('div');\n          labelEl.className = `${pfx}import-label`;\n          labelEl.innerHTML = importLabel;\n          container.appendChild(labelEl);\n        }\n\n        container.appendChild(codeViewer.getElement());\n\n        // Import button\n        const btnImp = document.createElement('button');\n        btnImp.type = 'button';\n        btnImp.innerHTML = config.modalImportButton;\n        btnImp.className = `${pfx}btn-prim ${pfx}btn-import`;\n        btnImp.onclick = () => {\n          editor.Css.clear();\n          editor.setComponents(codeViewer.getContent().trim());\n          editor.Modal.close();\n        };\n        container.appendChild(btnImp);\n\n        this.container = container;\n      }\n\n      return this.container;\n    },\n\n    /**\n     * Return the code viewer instance\n     * @returns {CodeViewer}\n     */\n    getCodeViewer() {\n      if (!this.codeViewer) {\n        this.codeViewer = editor.CodeManager.createViewer({\n          codeName: 'htmlmixed',\n          theme: 'hopscotch',\n          readOnly: false,\n          ...config.importViewerOptions,\n        });\n      }\n\n      return this.codeViewer;\n    },\n  });\n};\n", "import type { Editor } from 'grapesjs';\nimport { RequiredPluginOptions } from '..';\nimport {\n  cmdClear,\n  cmdDeviceDesktop,\n  cmdDeviceMobile,\n  cmdDeviceTablet,\n} from './../consts';\nimport openImport from './openImport';\n\nexport default (editor: Editor, config: RequiredPluginOptions) => {\n  const { Commands } = editor;\n  const txtConfirm = config.textCleanCanvas;\n\n  openImport(editor, config);\n\n  Commands.add(cmdDeviceDesktop, {\n    run: ed => ed.setDevice('Desktop'),\n    stop: () => {},\n  });\n  Commands.add(cmdDeviceTablet, {\n    run: ed => ed.setDevice('Tablet'),\n    stop: () => {},\n  });\n  Commands.add(cmdDeviceMobile, {\n    run: ed => ed.setDevice('Mobile portrait'),\n    stop: () => {},\n  });\n  Commands.add(cmdClear, (e: Editor) => confirm(txtConfirm) && e.runCommand('core:canvas-clear'));\n}\n", "import type { Editor, Plugin } from 'grapesjs';\nimport blocks from './blocks';\nimport commands from './commands';\nimport panels from './panels';\n\nexport type PluginOptions = {\n  /**\n   * Which blocks to add.\n   * @default ['link-block', 'quote', 'text-basic']\n   */\n  blocks?: string[];\n\n  /**\n   * Add custom block options, based on block id.\n   * @default (blockId) => ({})\n   * @example (blockId) => blockId === 'quote' ? { attributes: {...} } : {};\n   */\n  block?: (blockId: string) => ({});\n\n  /**\n   * Modal import title.\n   * @default 'Import'\n   */\n  modalImportTitle?: string;\n\n  /**\n   * Modal import button text.\n   * @default 'Import'\n   */\n  modalImportButton?: string;\n\n  /**\n   * Import description inside import modal.\n   * @default ''\n   */\n  modalImportLabel?: string;\n\n  /**\n   * Default content to setup on import model open.\n   * Could also be a function with a dynamic content return (must be a string).\n   * @default ''\n   * @example editor => editor.getHtml()\n   */\n  modalImportContent?: string | ((editor: Editor) => string);\n\n  /**\n   * Code viewer (eg. CodeMirror) options.\n   * @default {}\n   */\n  importViewerOptions?: Record<string, any>;\n\n  /**\n   * Confirm text before clearing the canvas.\n   * @default 'Are you sure you want to clear the canvas?'\n   */\n  textCleanCanvas?: string;\n\n  /**\n   * Show the Style Manager on component change.\n   * @default true\n   */\n  showStylesOnChange?: boolean;\n\n  /**\n   * Load custom preset theme.\n   * @default true\n   */\n  useCustomTheme?: boolean;\n};\n\nexport type RequiredPluginOptions = Required<PluginOptions>;\n\nconst plugin: Plugin<PluginOptions> = (editor, opts: Partial<PluginOptions> = {}) => {\n  const config: RequiredPluginOptions = {\n    blocks: ['link-block', 'quote', 'text-basic'],\n    block: () => ({}),\n    modalImportTitle: 'Import',\n    modalImportButton: 'Import',\n    modalImportLabel: '',\n    modalImportContent: '',\n    importViewerOptions: {},\n    textCleanCanvas: 'Are you sure you want to clear the canvas?',\n    showStylesOnChange: true,\n    useCustomTheme: true,\n    ...opts,\n  };\n\n  if (config.useCustomTheme && typeof window !== 'undefined') {\n    const primaryColor = '#463a3c';\n    const secondaryColor = '#b9a5a6';\n    const tertiaryColor = '#804f7b';\n    const quaternaryColor = '#d97aa6';\n    const prefix = 'gjs-';\n    let cssString = '';\n\n    [\n      ['one', primaryColor],\n      ['two', secondaryColor],\n      ['three', tertiaryColor],\n      ['four', quaternaryColor],\n    ].forEach(([cnum, ccol]) => {\n      cssString += `\n        .${prefix}${cnum}-bg {\n          background-color: ${ccol};\n        }\n\n        .${prefix}${cnum}-color {\n          color: ${ccol};\n        }\n\n        .${prefix}${cnum}-color-h:hover {\n          color: ${ccol};\n        }\n      `;\n    });\n\n    const style = document.createElement('style');\n    style.innerText = cssString;\n    document.head.appendChild(style);\n  }\n\n  // Load blocks\n  blocks(editor, config);\n\n  // Load commands\n  commands(editor, config);\n\n  // Load panels\n  panels(editor, config);\n}\n\nexport default plugin;\n", "import type { Editor, BlockProperties } from 'grapesjs';\nimport { RequiredPluginOptions } from '.';\n\nexport default (editor: Editor, opts: RequiredPluginOptions) => {\n  const addBlock = (id: string, def: BlockProperties) => {\n    opts.blocks.indexOf(id)! >= 0 && editor.Blocks.add(id, {\n      select: true,\n      category: 'Basic',\n      ...def,\n      ...opts.block(id),\n    });\n  }\n\n  addBlock('link-block', {\n    label: 'Link Block',\n    media: `<svg viewBox=\"0 0 24 24\">\n      <path fill=\"currentColor\" d=\"M3.9,12C3.9,10.29 5.29,8.9 7,8.9H11V7H7A5,5 0 0,0 2,12A5,5 0 0,0 7,17H11V15.1H7C5.29,15.1 3.9,13.71 3.9,12M8,13H16V11H8V13M17,7H13V8.9H17C18.71,8.9 20.1,10.29 20.1,12C20.1,13.71 18.71,15.1 17,15.1H13V17H17A5,5 0 0,0 22,12A5,5 0 0,0 17,7Z\"></path>\n    </svg>`,\n    content: {\n      type: 'link',\n      editable: false,\n      droppable: true,\n      style: {\n        display: 'inline-block',\n        padding: '5px',\n        'min-height': '50px',\n        'min-width': '50px'\n      }\n    },\n  });\n\n  addBlock('quote', {\n    label: 'Quote',\n    media: `<svg viewBox=\"0 0 24 24\">\n        <path fill=\"currentColor\" d=\"M14,17H17L19,13V7H13V13H16M6,17H9L11,13V7H5V13H8L6,17Z\" />\n    </svg>`,\n    content: `<blockquote class=\"quote\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore ipsum dolor sit\n      </blockquote>`\n  });\n\n  addBlock('text-basic', {\n    label: 'Text section',\n    media: `<svg viewBox=\"0 0 24 24\">\n        <path fill=\"currentColor\" d=\"M21,6V8H3V6H21M3,18H12V16H3V18M3,13H21V11H3V13Z\" />\n    </svg>`,\n    content: `<section class=\"bdg-sect\">\n      <h1 class=\"heading\">Insert title here</h1>\n      <p class=\"paragraph\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p>\n      </section>`\n  });\n}\n", "import type { Editor } from 'grapesjs';\nimport { RequiredPluginOptions } from '.';\n\nimport {\n  cmdImport,\n  cmdDeviceDesktop,\n  cmdDeviceTablet,\n  cmdDeviceMobile,\n  cmdClear\n} from './consts';\n\nexport default (editor: Editor, opts: RequiredPluginOptions) => {\n  const { Panels } = editor;\n  const config = editor.getConfig();\n  const swv = 'sw-visibility';\n  const expt = 'export-template';\n  const osm = 'open-sm';\n  const otm = 'open-tm';\n  const ola = 'open-layers';\n  const obl = 'open-blocks';\n  const ful = 'fullscreen';\n  const prv = 'preview';\n  const iconStyle = 'style=\"display: block; max-width:22px\"';\n\n  config.showDevices = false;\n\n  Panels.getPanels().reset([\n    {\n      id: 'commands',\n      buttons: [{}],\n    },\n    {\n      id: 'devices-c',\n      buttons: [{\n        id: cmdDeviceDesktop,\n        command: cmdDeviceDesktop,\n        active: true,\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M21,16H3V4H21M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0 3,18H10V20H8V22H16V20H14V18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z\" />\n        </svg>`\n      },{\n        id: cmdDeviceTablet,\n        command: cmdDeviceTablet,\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M19,18H5V6H19M21,4H3C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H21A2,2 0 0,0 23,18V6C23,4.89 22.1,4 21,4Z\" />\n        </svg>`\n      },{\n        id: cmdDeviceMobile,\n        command: cmdDeviceMobile,\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M17,19H7V5H17M17,1H7C5.89,1 5,1.89 5,3V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V3C19,1.89 18.1,1 17,1Z\" />\n        </svg>`\n      }]\n    },\n    {\n      id: 'options',\n      buttons: [{\n        id: swv,\n        command: swv,\n        context: swv,\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n        <path fill=\"currentColor\" d=\"M15,5H17V3H15M15,21H17V19H15M11,5H13V3H11M19,5H21V3H19M19,9H21V7H19M19,21H21V19H19M19,13H21V11H19M19,17H21V15H19M3,5H5V3H3M3,9H5V7H3M3,13H5V11H3M3,17H5V15H3M3,21H5V19H3M11,21H13V19H11M7,21H9V19H7M7,5H9V3H7V5Z\" />\n    </svg>`,\n      },{\n        id: prv,\n        context: prv,\n        command: () => editor.runCommand(prv),\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z\"></path></svg>`\n      },{\n        id: ful,\n        command: ful,\n        context: ful,\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M5,5H10V7H7V10H5V5M14,5H19V10H17V7H14V5M17,14H19V19H14V17H17V14M10,17V19H5V14H7V17H10Z\" />\n        </svg>`\n      },{\n        id: expt,\n        command: () => editor.runCommand(expt),\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M12.89,3L14.85,3.4L11.11,21L9.15,20.6L12.89,3M19.59,12L16,8.41V5.58L22.42,12L16,18.41V15.58L19.59,12M1.58,12L8,5.58V8.41L4.41,12L8,15.58V18.41L1.58,12Z\" />\n        </svg>`\n      },{\n        id: 'undo',\n        command: () => editor.runCommand('core:undo'),\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M20 13.5C20 17.09 17.09 20 13.5 20H6V18H13.5C16 18 18 16 18 13.5S16 9 13.5 9H7.83L10.91 12.09L9.5 13.5L4 8L9.5 2.5L10.92 3.91L7.83 7H13.5C17.09 7 20 9.91 20 13.5Z\" />\n        </svg>`\n      },{\n        id: 'redo',\n        command: () => editor.runCommand('core:redo'),\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M10.5 18H18V20H10.5C6.91 20 4 17.09 4 13.5S6.91 7 10.5 7H16.17L13.08 3.91L14.5 2.5L20 8L14.5 13.5L13.09 12.09L16.17 9H10.5C8 9 6 11 6 13.5S8 18 10.5 18Z\" />\n        </svg>`,\n      },{\n        id: cmdImport,\n        command: () => editor.runCommand(cmdImport),\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z\" />\n        </svg>`,\n      },{\n        id: cmdClear,\n        command: () => editor.runCommand(cmdClear),\n        label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n              <path fill=\"currentColor\" d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\" />\n          </svg>`,\n      }],\n  },{\n    id: 'views',\n    buttons  : [{\n      id: osm,\n      command: osm,\n      active: true,\n      label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M20.71,4.63L19.37,3.29C19,2.9 18.35,2.9 17.96,3.29L9,12.25L11.75,15L20.71,6.04C21.1,5.65 21.1,5 20.71,4.63M7,14A3,3 0 0,0 4,17C4,18.31 2.84,19 2,19C2.92,20.22 4.5,21 6,21A4,4 0 0,0 10,17A3,3 0 0,0 7,14Z\" />\n        </svg>`,\n    },{\n      id: otm,\n      command: otm,\n      label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n          <path fill=\"currentColor\" d=\"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\" />\n      </svg>`\n    },{\n      id: ola,\n      command: ola,\n      label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n          <path fill=\"currentColor\" d=\"M12,16L19.36,10.27L21,9L12,2L3,9L4.63,10.27M12,18.54L4.62,12.81L3,14.07L12,21.07L21,14.07L19.37,12.8L12,18.54Z\" />\n      </svg>`\n    },{\n      id: obl,\n      command: obl,\n      label: `<svg ${iconStyle} viewBox=\"0 0 24 24\">\n          <path fill=\"currentColor\" d=\"M17,13H13V17H11V13H7V11H11V7H13V11H17M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\" />\n      </svg>`\n    }],\n  }]);\n\n  const openBl = Panels.getButton('views', obl);\n  editor.on('load', () => openBl?.set('active', true));\n\n  // On component change show the Style Manager\n  opts.showStylesOnChange && editor.on('component:selected', () => {\n    const openSmBtn = Panels.getButton('views', osm);\n    const openLayersBtn = Panels.getButton('views', ola);\n\n    // Don't switch when the Layer Manager is on or\n    // there is no selected component\n    if ((!openLayersBtn || !openLayersBtn.get('active')) && editor.getSelected()) {\n      openSmBtn?.set('active', true);\n    }\n  });\n}\n"],
  "mappings": ";;;;;;;MAAA,SAA2CA,GAAMC,GAAAA;AAC1B,kBAAA,OAAZC,WAA0C,YAAA,OAAXC,SACxCA,OAAOD,UAAUD,EAAAA,IACQ,cAAA,OAAXG,UAAyBA,OAAOC,MAC9CD,OAAO,CAAA,GAAIH,CAAAA,IACe,YAAA,OAAZC,UACdA,QAAQ,yBAAA,IAA6BD,EAAAA,IAErCD,EAAK,yBAAA,IAA6BC,EAAAA;IACnC,GAAwB,eAAA,OAAfK,aAA6BA,aAAgC,eAAA,OAAXC,SAAyBA,SAASC,UAAO,OAAA,MAAA;AAAA;ACRrG,UAAIC,IAAsB,ECA1BA,GAAwB,CAACP,IAASQ,OAAAA;AACjC,iBAAQC,MAAOD,GACXD,GAAoBG,EAAEF,IAAYC,EAAAA,KAAAA,CAASF,EAAoBG,EAAEV,IAASS,EAAAA,KAC5EE,OAAOC,eAAeZ,IAASS,IAAK,EAAEI,YAAAA,MAAkBC,KAAKN,GAAWC,EAAAA,EAAAA,CAAAA;MAE1E,GCNDF,GAAwB,CAACQ,IAAKC,OAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,IAAKC,EAAAA,GCClFT,GAAyBP,CAAAA,OAAAA;AACH,uBAAA,OAAXoB,UAA0BA,OAAOC,eAC1CV,OAAOC,eAAeZ,IAASoB,OAAOC,aAAa,EAAEC,OAAO,SAAA,CAAA,GAE7DX,OAAOC,eAAeZ,IAAS,cAAc,EAAEsB,OAAAA,KAAO,CAAA;MAAO,EAAA,GAAA,IAAA,CAAA;AAAA,QAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,MAAA,EAAA,CAAA;AAAA,UAAA,IAAA,WAAA;AAAA,eAAA,IAAA,OAAA,UAAA,SAAAC,IAAA;AAAA,mBAAAC,IAAAC,KAAA,GAAAf,KAAA,UAAA,QAAAe,KAAAf,IAAAe,KAAA,UAAAC,MAAAF,KAAA,UAAAC,EAAA,EAAA,QAAA,UAAA,eAAA,KAAAD,IAAAE,EAAA,MAAAH,GAAAG,EAAA,IAAAF,GAAAE,EAAA;AAAA,iBAAAH;QAAA,GAAA,EAAA,MAAA,MAAA,SAAA;MAAA;ACLvD,UAAMI,IAAY,2BACZC,IAAmB,sBACnBC,IAAkB,qBAClBC,IAAkB,qBAClBC,IAAW,gBAAA,IAAA,WAAA;AAAA,eAAA,IAAA,OAAA,UAAA,SAAAR,IAAA;AAAA,mBAAAC,IAAAC,KAAA,GAAAf,KAAA,UAAA,QAAAe,KAAAf,IAAAe,KAAA,UAAAC,MAAAF,KAAA,UAAAC,EAAA,EAAA,QAAA,UAAA,eAAA,KAAAD,IAAAE,EAAA,MAAAH,GAAAG,EAAA,IAAAF,GAAAE,EAAA;AAAA,iBAAAH;QAAA,GAAA,EAAA,MAAA,MAAA,SAAA;MAAA;ACAxB,YCMA,IAAA,SAAgBS,IAAgBC,IAAAA;AACtB,YAAAC,KAAaF,GAAM,UACrBG,KAAaF,GAAOG;AAAAA,UDR5B,SAAgBJ,IAAgBC,IAAAA;AAC9B,cAAMI,KAAML,GAAOM,UAAU,aAAA,GACvBC,KAAcN,GAAOO,kBACrBC,KAAYR,GAAOS;AAEzBV,UAAAA,GAAOE,SAASS,IAAIhB,GAAW,EAC7BiB,YAAY,MACZC,WAAW,MAEXC,KAAG,SAACd,IAAAA;AACF,gBAAMe,KAAkC,cAAA,OAAbN,KAA0BA,GAAUT,EAAAA,IAAUS,IACnEG,KAAatC,KAAK0C,cAAAA;AACxBhB,YAAAA,GAAOiB,MAAMC,KAAK,EAChBC,OAAOlB,GAAOmB,kBACdC,SAAS/C,KAAKgD,aAAAA,EAAAA,CAAAA,EACbC,WAAU,WAAA;AAAM,qBAAAvB,GAAOwB,YAAY7B,CAAAA;YAAnB,EAAA,GACnBiB,GAAWa,WAAWV,QAAAA,KAAAA,KAAe,EAAA,GACrCH,GAAWc,QAAAA,GACXC,YAAW,WAAA;AAAK,qBAAAf,GAAWgB,MAAAA;YAAX,IAAoB,CAAA;UACtC,GAEAC,MAAI,WAAA;AACF7B,YAAAA,GAAOiB,MAAMa,MAAAA;UACf,GAEAR,cAAY,WAAA;AACV,gBAAA,CAAKhD,KAAKuC,WAAW;AACnB,kBAAMnC,KAAaJ,KAAK0C,cAAAA,GAClBH,KAAYkB,SAASC,cAAc,KAAA;AAIzC,kBAHAnB,GAAUoB,YAAY,GAAA,OAAG5B,IAAG,kBAAA,GAGxBE,IAAa;AACf,oBAAM2B,KAAUH,SAASC,cAAc,KAAA;AACvCE,gBAAAA,GAAQD,YAAY,GAAA,OAAG5B,IAAG,cAAA,GAC1B6B,GAAQC,YAAY5B,IACpBM,GAAUuB,YAAYF,EAAAA;cAAAA;AAGxBrB,cAAAA,GAAUuB,YAAY1D,GAAW2D,WAAAA,CAAAA;AAGjC,kBAAMC,KAASP,SAASC,cAAc,QAAA;AACtCM,cAAAA,GAAOC,OAAO,UACdD,GAAOH,YAAYlC,GAAOuC,mBAC1BF,GAAOL,YAAY,GAAA,OAAG5B,IAAG,WAAA,EAAA,OAAYA,IAAG,YAAA,GACxCiC,GAAOG,UAAU,WAAA;AACfzC,gBAAAA,GAAO0C,IAAIC,MAAAA,GACX3C,GAAO4C,cAAclE,GAAWmE,WAAAA,EAAaC,KAAAA,CAAAA,GAC7C9C,GAAOiB,MAAMa,MAAAA;cACf,GACAjB,GAAUuB,YAAYE,EAAAA,GAEtBhE,KAAKuC,YAAYA;YAAAA;AAGnB,mBAAOvC,KAAKuC;UACd,GAMAG,eAAa,WAAA;AAUX,mBATK1C,KAAKsC,eACRtC,KAAKsC,aAAaZ,GAAO+C,YAAYC,aAAa,EAAA,EAChDC,UAAU,aACVC,OAAO,aACPC,UAAAA,MAAU,GACPlD,GAAOmD,mBAAAA,CAAAA,IAIP9E,KAAKsC;UACd,EAAA,CAAA;QAEH,GClEYZ,IAAQC,EAAAA,GAEnBC,GAASS,IAAIf,GAAkB,EAC7BkB,KAAK,SAAAuC,IAAAA;AAAM,iBAAAA,GAAGC,UAAU,SAAA;QAAb,GACXzB,MAAM,WAAA;QAAO,EAAA,CAAA,GAEf3B,GAASS,IAAId,GAAiB,EAC5BiB,KAAK,SAAAuC,IAAAA;AAAM,iBAAAA,GAAGC,UAAU,QAAA;QAAb,GACXzB,MAAM,WAAA;QAAO,EAAA,CAAA,GAEf3B,GAASS,IAAIb,GAAiB,EAC5BgB,KAAK,SAAAuC,IAAAA;AAAM,iBAAAA,GAAGC,UAAU,iBAAA;QAAb,GACXzB,MAAM,WAAA;QAAO,EAAA,CAAA,GAEf3B,GAASS,IAAIZ,IAAU,SAACR,IAAAA;AAAc,iBAAAgE,QAAQpD,EAAAA,KAAeZ,GAAEiE,WAAW,mBAAA;QAApC,EAAA;MACvC;AAAA,UAAA,IAAA,WAAA;AAAA,eAAA,IAAA,OAAA,UAAA,SAAAjE,IAAA;AAAA,mBAAAC,IAAAC,KAAA,GAAAf,KAAA,UAAA,QAAAe,KAAAf,IAAAe,KAAA,UAAAC,MAAAF,KAAA,UAAAC,EAAA,EAAA,QAAA,UAAA,eAAA,KAAAD,IAAAE,EAAA,MAAAH,GAAAG,EAAA,IAAAF,GAAAE,EAAA;AAAA,iBAAAH;QAAA,GAAA,EAAA,MAAA,MAAA,SAAA;MAAA;ACsGD,YAAA,IA3DsC,SAACS,IAAQyD,IAAAA;AAAAA,mBAAAA,OAAAA,KAAA,CAAA;AAC7C,YAAMxD,KAAM,EAAA,EACVyD,QAAQ,CAAC,cAAc,SAAS,YAAA,GAChCC,OAAO,WAAA;AAAM,iBAAA,CAAG;QAAH,GACbvC,kBAAkB,UAClBoB,mBAAmB,UACnBhC,kBAAkB,IAClBE,oBAAoB,IACpB0C,qBAAqB,CAAC,GACtBhD,iBAAiB,8CACjBwD,oBAAAA,MACAC,gBAAAA,KAAgB,GACbJ,EAAAA;AAGL,YAAIxD,GAAO4D,kBAAoC,eAAA,OAAXxF,QAAwB;AAC1D,cAIMyF,KAAS,QACX,IAAY;AAEhB,WACE,CAAC,OARkB,SAAA,GASnB,CAAC,OARoB,SAAA,GASrB,CAAC,SARmB,SAAA,GASpB,CAAC,QARqB,SAAA,CAAA,EAStBC,SAAQ,SAACxE,IAAA;AAAA,gBAACyE,KAAIzE,GAAA,CAAA,GAAE0E,KAAI1E,GAAA,CAAA;AACpB,iBAAa,cAAA,OACRuE,EAAA,EAAM,OAAGE,IAAI,qCAAA,EAAA,OACMC,IAAI,2BAAA,EAAA,OAGvBH,EAAA,EAAM,OAAGE,IAAI,6BAAA,EAAA,OACLC,IAAI,2BAAA,EAAA,OAGZH,EAAA,EAAM,OAAGE,IAAI,qCAAA,EAAA,OACLC,IAAI,sBAAA;UAGnB,EAAA;AAEA,cAAMC,IAAQnC,SAASC,cAAc,OAAA;AACrCkC,YAAMC,YAAY,GAClBpC,SAASqC,KAAKhC,YAAY8B,CAAAA;QAAAA;AAAAA,UCnH9B,SAAgBlE,IAAgByD,IAAAA;AAC9B,cAAMY,KAAW,SAACC,IAAYC,IAAAA;AAC5Bd,YAAAA,GAAKC,OAAOc,QAAQF,EAAAA,KAAQ,KAAKtE,GAAOyE,OAAO9D,IAAI2D,IAAI,EAAF,EAAA,EACnDI,QAAAA,MACAC,UAAU,QAAA,GACPJ,EAAAA,GACAd,GAAKE,MAAMW,EAAAA,CAAAA,CAAAA;UAElB;AAEAD,UAAAA,GAAS,cAAc,EACrBO,OAAO,cACPC,OAAO,oUAGPxD,SAAS,EACPkB,MAAM,QACNuC,UAAAA,OACAC,WAAAA,MACAb,OAAO,EACLc,SAAS,gBACTC,SAAS,OACT,cAAc,QACd,aAAa,OAAA,EAAA,EAAA,CAAA,GAKnBZ,GAAS,SAAS,EAChBO,OAAO,SACPC,OAAO,0IAGPxD,SAAS,+KAAA,CAAA,GAKXgD,GAAS,cAAc,EACrBO,OAAO,gBACPC,OAAO,mIAGPxD,SAAS,4PAAA,CAAA;QAKZ,GDuEQrB,IAAQC,EAAAA,GAGfiF,EAASlF,IAAQC,EAAAA,IElHnB,SAAgBD,IAAgByD,IAAAA;AACtB,cAAA0B,KAAWnF,GAAM,QACnBC,KAASD,GAAOM,UAAAA,GAChB8E,KAAM,iBACNC,KAAO,mBACPC,KAAM,WACNC,KAAM,WACNC,KAAM,eACNC,IAAM,eACNC,IAAM,cACNC,IAAM,WACNC,IAAY;AAElB3F,UAAAA,GAAO4F,cAAAA,OAEPV,GAAOW,UAAAA,EAAYC,MAAM,CACvB,EACEzB,IAAI,YACJ0B,SAAS,CAAC,CAAC,CAAA,EAAA,GAEb,EACE1B,IAAI,aACJ0B,SAAS,CAAC,EACR1B,IAAI1E,GACJqG,SAASrG,GACTsG,QAAAA,MACAtB,OAAO,QAAA,OAAQgB,GAAS,+MAAA,EAAA,GAGxB,EACAtB,IAAIzE,GACJoG,SAASpG,GACT+E,OAAO,QAAA,OAAQgB,GAAS,wLAAA,EAAA,GAGxB,EACAtB,IAAIxE,GACJmG,SAASnG,GACT8E,OAAO,QAAA,OAAQgB,GAAS,wLAAA,EAAA,CAAA,EAAA,GAK5B,EACEtB,IAAI,WACJ0B,SAAS,CAAC,EACR1B,IAAIc,IACJa,SAASb,IACTe,SAASf,IACTR,OAAO,QAAA,OAAQgB,GAAS,8RAAA,EAAA,GAGxB,EACAtB,IAAIqB,GACJQ,SAASR,GACTM,SAAS,WAAA;AAAM,mBAAAjG,GAAOwD,WAAWmC,CAAAA;UAAlB,GACff,OAAO,QAAA,OAAQgB,GAAS,oTAAA,EAAA,GACxB,EACAtB,IAAIoB,GACJO,SAASP,GACTS,SAAST,GACTd,OAAO,QAAA,OAAQgB,GAAS,4KAAA,EAAA,GAGxB,EACAtB,IAAIe,IACJY,SAAS,WAAA;AAAM,mBAAAjG,GAAOwD,WAAW6B,EAAAA;UAAlB,GACfT,OAAO,QAAA,OAAQgB,GAAS,6OAAA,EAAA,GAGxB,EACAtB,IAAI,QACJ2B,SAAS,WAAA;AAAM,mBAAAjG,GAAOwD,WAAW,WAAA;UAAlB,GACfoB,OAAO,QAAA,OAAQgB,GAAS,wPAAA,EAAA,GAGxB,EACAtB,IAAI,QACJ2B,SAAS,WAAA;AAAM,mBAAAjG,GAAOwD,WAAW,WAAA;UAAlB,GACfoB,OAAO,QAAA,OAAQgB,GAAS,8OAAA,EAAA,GAGxB,EACAtB,IAAI3E,GACJsG,SAAS,WAAA;AAAM,mBAAAjG,GAAOwD,WAAW7D,CAAAA;UAAlB,GACfiF,OAAO,QAAA,OAAQgB,GAAS,+HAAA,EAAA,GAGxB,EACAtB,IAAIvE,GACJkG,SAAS,WAAA;AAAM,mBAAAjG,GAAOwD,WAAWzD,CAAAA;UAAlB,GACf6E,OAAO,QAAA,OAAQgB,GAAS,2KAAA,EAAA,CAAA,EAAA,GAI5B,EACAtB,IAAI,SACJ0B,SAAW,CAAC,EACV1B,IAAIgB,IACJW,SAASX,IACTY,QAAAA,MACAtB,OAAO,QAAA,OAAQgB,GAAS,gSAAA,EAAA,GAGxB,EACAtB,IAAIiB,IACJU,SAASV,IACTX,OAAO,QAAA,OAAQgB,GAAS,69BAAA,EAAA,GAGxB,EACAtB,IAAIkB,IACJS,SAAST,IACTZ,OAAO,QAAA,OAAQgB,GAAS,gMAAA,EAAA,GAGxB,EACAtB,IAAImB,GACJQ,SAASR,GACTb,OAAO,QAAA,OAAQgB,GAAS,4MAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AAM5B,cAAMQ,IAASjB,GAAOkB,UAAU,SAASZ,CAAAA;AACzCzF,UAAAA,GAAOsG,GAAG,SAAQ,WAAA;AAAM,mBAAAF,QAAAA,IAAAA,SAAAA,EAAQG,IAAI,UAAA,IAAU;UAAtB,EAAA,GAGxB9C,GAAKG,sBAAsB5D,GAAOsG,GAAG,uBAAsB,WAAA;AACzD,gBAAME,KAAYrB,GAAOkB,UAAU,SAASf,EAAAA,GACtCmB,KAAgBtB,GAAOkB,UAAU,SAASb,EAAAA;AAI1CiB,YAAAA,MAAkBA,GAAc3H,IAAI,QAAA,KAAA,CAAckB,GAAO0G,YAAAA,KAC7DF,QAAAA,MAAAA,GAAWD,IAAI,UAAA,IAAU;UAE7B,EAAA;QACD,GFtBQvG,IAAQC,EAAAA;MACjB;AAAA,aAAA;IAAA,GAAA,EAAA;;;",
  "names": ["root", "factory", "exports", "module", "define", "amd", "globalThis", "window", "this", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "e", "n", "t", "r", "cmdImport", "cmdDeviceDesktop", "cmdDeviceTablet", "cmdDeviceMobile", "cmdClear", "editor", "config", "Commands", "txtConfirm", "textCleanCanvas", "pfx", "getConfig", "importLabel", "modalImportLabel", "importCnt", "modalImportContent", "add", "codeViewer", "container", "run", "codeContent", "getCodeViewer", "Modal", "open", "title", "modalImportTitle", "content", "getContainer", "onceClose", "stopCommand", "setContent", "refresh", "setTimeout", "focus", "stop", "close", "document", "createElement", "className", "labelEl", "innerHTML", "appendChild", "getElement", "btnImp", "type", "modalImportButton", "onclick", "Css", "clear", "setComponents", "getContent", "trim", "CodeManager", "createViewer", "codeName", "theme", "readOnly", "importViewerOptions", "ed", "setDevice", "confirm", "runCommand", "opts", "blocks", "block", "showStylesOnChange", "useCustomTheme", "u", "forEach", "cnum", "ccol", "style", "innerText", "head", "addBlock", "id", "def", "indexOf", "Blocks", "select", "category", "label", "media", "editable", "droppable", "display", "padding", "commands", "Panels", "swv", "expt", "osm", "otm", "ola", "obl", "ful", "prv", "iconStyle", "showDevices", "getPanels", "reset", "buttons", "command", "active", "context", "openBl", "getButton", "on", "set", "openSmBtn", "openLayersBtn", "getSelected"]
}
